{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/takashimatakuto/Documents/app/chatbot/src/components/Form/FormDialog.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormText from './FormText';\nexport default class FormDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.inputName = event => {\n      // console.log(event.target.value);\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.inputEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.inputDescription = event => {\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.submit = () => {\n      //入力してくれた情報を定数化\n      const name = this.state.name;\n      const email = this.state.email;\n      const description = this.state.description; //slackに通知を送る\n\n      const payload = {\n        te\n      };\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      description: \"\"\n    };\n    this.inputName = this.inputName.bind(this);\n    this.inputEmail = this.inputEmail.bind(this);\n    this.inputDescription = this.inputDescription.bind(this);\n  } //したの３つはstateの更新をしている。\n  //１文字入れるたびにstateが更新される\n  //logをみてみればわかる\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Dialog //なぜthisが必要のか\n    , {\n      open: this.props.open,\n      onClose: this.props.handleClickClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"\\u304A\\u554F\\u3044\\u5408\\u308F\\u305B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(FormText, {\n          multiline: false,\n          rows: 1,\n          type: \"text\",\n          label: \"お名前（必須）\",\n          onChange: this.inputName,\n          value: this.state.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormText, {\n          multiline: false,\n          rows: 1,\n          type: \"email\",\n          label: \"メールアドレス（必須）\",\n          onChange: this.inputEmail,\n          value: this.state.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormText, {\n          multiline: true,\n          rows: 5,\n          type: \"text\",\n          label: \"お問い合わせ内容（必須）\",\n          onChange: this.inputDescription,\n          value: this.state.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.props.handleClickClose,\n          color: \"primary\",\n          children: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.submit(),\n          color: \"primary\",\n          autoFocus: true,\n          children: \"\\u9001\\u4FE1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/takashimatakuto/Documents/app/chatbot/src/components/Form/FormDialog.jsx"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormText","FormDialog","Component","constructor","props","inputName","event","setState","name","target","value","inputEmail","email","inputDescription","description","submit","state","payload","te","bind","render","open","handleClickClose"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormText from './FormText';\n\nexport default class FormDialog extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state= {\n            name : \"\",\n            email : \"\",\n            description : \"\"\n        }\n        this.inputName = this.inputName.bind(this)\n        this.inputEmail = this.inputEmail.bind(this)\n        this.inputDescription = this.inputDescription.bind(this)\n    }\n    //したの３つはstateの更新をしている。\n    //１文字入れるたびにstateが更新される\n    //logをみてみればわかる\n    inputName = (event) =>{\n        // console.log(event.target.value);\n        this.setState({\n            name:event.target.value\n        })\n    }\n    inputEmail = (event) =>{\n        this.setState({\n            email:event.target.value\n        })\n    }\n    inputDescription = (event) =>{\n        this.setState({\n            description:event.target.value\n        })\n    }\n    submit =()=>{\n        //入力してくれた情報を定数化\n        const name = this.state.name\n        const email = this.state.email\n        const description = this.state.description\n\n        //slackに通知を送る\n        const payload = {\n            te\n        }\n\n    }\n    render(){\n        return(\n            <Dialog\n            //なぜthisが必要のか\n                open={this.props.open}\n                onClose={this.props.handleClickClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">お問い合わせ</DialogTitle>\n                <DialogContent>\n                    <FormText\n                        multiline = {false}\n                        rows = {1}\n                        type = {\"text\"}\n                        label = {\"お名前（必須）\"}\n                        onChange = {this.inputName}\n                        value = {this.state.name}\n                    />\n                    <FormText\n                        multiline = {false}\n                        rows = {1}\n                        type = {\"email\"}\n                        label = {\"メールアドレス（必須）\"}\n                        onChange = {this.inputEmail}\n                        value = {this.state.email}\n                    />\n                    <FormText\n                        multiline = {true}\n                        rows = {5}\n                        type = {\"text\"}\n                        label = {\"お問い合わせ内容（必須）\"}\n                        onChange = {this.inputDescription}\n                        value = {this.state.description}\n                    />\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={this.props.handleClickClose} color=\"primary\">\n                    キャンセル\n                </Button>\n                <Button onClick={this.submit()} color=\"primary\" autoFocus>\n                    送信\n                </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}